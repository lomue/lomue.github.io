<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OMUE&#39;s@LITEC</title>
    <link>/</link>
    <description>Recent content on OMUE&#39;s@LITEC</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 02 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About LOMUE&#39;s@LITEC</title>
      <link>/home/</link>
      <pubDate>Wed, 17 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>/home/</guid>
      <description>Sie finden in Form eines Blogs Unterrichtsmaterialien für die Fächer
 Betriebstechnik (BET) Wirtschaftinformatik (WINF) Führungstechnik (FT)  Die Inhalte sind dabei so angelegt, dass die Materialen als Unterstützung für den Unterricht - als roter Faden - dienen. Sie sind also eher wie eine Powerpointpräsentation mit ganz viel Text (soll man ja nicht machen) zu verstehen.
 Aufpassen, Fragen stellen, diskutieren und üben sind also - natürlich - erforderlich.
 Technisch gesehen habe ich die Form von</description>
    </item>
    
    <item>
      <title>Produktionsprozess mit Odoo</title>
      <link>/post/odoo_labor/</link>
      <pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/odoo_labor/</guid>
      <description>ERP System &amp;ldquo;Odoo&amp;rdquo; Produktion / Fertigung Fertigung ist grundsätzlich nur eine weitere &amp;ldquo;Route&amp;rdquo; wie Produkte beschafft werden können.
MakeToOrder und MakeToStock sind möglich (und alle Unterarten wie AssebleToOrder, etc)
Stammdaten  Alle Stammdaten der anderen Module (Verkauf, Einkauf, Artikel, etc) Stücklisten (BoM)  Set (Bausatz) Stücklisten für Produktion   Arbeitsplätze Arbeitspläne  Vorbedingungen, Vorbereitungen  alle Komponenten welche in BoM eingehen müssen als Produkte angelegt sein Arbeitsplätze anlegen  Alle in den Arbeitsplänen als Ressourcen angelegte Arbeitsplätze, Abteilungen, etc.</description>
    </item>
    
    <item>
      <title>Aufgabensammlung ERP Odoo</title>
      <link>/post/aufgaben_erp/</link>
      <pubDate>Sat, 30 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/aufgaben_erp/</guid>
      <description>Aufgabensammlung ERP Odoo  Wie lautet der Aufruf (Link, URL) des ERP Programms und wie lautet Ihr Benutzerzugang?  Wie lautet Ihr Username – ggf. ändern Sie diesen (Mailadresse und Username sollen nicht gleich sein) Welche Kontakte sind als Kunden angelegt, welche als Lieferanten? (vom User LOMUE) Bei welcher Bank hat der Lomue_Lieferant 2 sein Konto liegen? Welche Kontonummer?  Legen Sie eine neue Zahlungsbedingung an - 21 Tage 5% Skonto / 30 Tage netto Wie lautet die Lieferbedingung für &amp;ldquo;der Käufer übernimmt alle Gefahren&amp;rdquo;?</description>
    </item>
    
    <item>
      <title>Flussdiagramme</title>
      <link>/post/flussdiagramme/</link>
      <pubDate>Sat, 30 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/flussdiagramme/</guid>
      <description>Flussdiagramme Ein Flussdiagramm oder auch Ablaufdiagramm bezeichnet, veranschaulicht in der Organisationslehre einen Arbeitsablauf, indem es eine Abfolge von Entscheidungen und Anweisungen vorschreibt. Üblicherweise entspricht dabei ein Symbol im Diagramm einem Zustand oder einem Zustandswechsel, und ein konkreter Ablauf entspricht einem Pfad durch das Diagramm. Üblicherweise enthält ein Ablaufdiagramm optionale Pfade und somit fallspezifische Anweisungen.
Neben der Illustration von Algorithmen eignen sich Ablaufdiagramme zur Darstellung von Prozessen und Tätigkeiten, beispielsweise zur Entscheidungsfindung in Reparaturanleitungen, zur Darstellung von Geschäftsmodellen und in der medizinischen Diagnostik.</description>
    </item>
    
    <item>
      <title>About LOMUE&#39;s@LITEC</title>
      <link>/about/</link>
      <pubDate>Wed, 09 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>Sie finden in Form eines Blogs Unterrichtsmaterialien für die Fächer
 Betriebstechnik (BET) Wirtschaftinformatik (WINF) Führungstechnik (FT)  Die Inhalte sind dabei so angelegt, dass die Materialen als Unterstützung für den Unterricht - als roter Faden - dienen. Sie sind also eher wie eine Powerpointpräsentation mit ganz viel Text (soll man ja nicht machen) zu verstehen.
 Aufpassen, Fragen stellen, diskutieren und üben sind also - natürlich - erforderlich.
 Technisch gesehen habe ich die Form von</description>
    </item>
    
    <item>
      <title>Basic HTML Elements</title>
      <link>/post/basic-elements/</link>
      <pubDate>Mon, 16 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/basic-elements/</guid>
      <description>&lt;p&gt;The main purpose of this article is to make sure that all basic HTML Elements are decorated with CSS so as to not miss any possible elements when creating new themes for Hugo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>/post/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>/post/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/goisforlovers/</guid>
      <description>&lt;p&gt;Hugo uses the excellent &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; &lt;a href=&#34;https://golang.org/pkg/html/template/&#34;&gt;html/template&lt;/a&gt; library for
its template engine. It is an extremely lightweight engine that provides a very
small amount of logic. In our experience that it is just the right amount of
logic to be able to create a good static website. If you have used other
template systems from different languages or frameworks you will find a lot of
similarities in Go templates.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>/post/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>/post/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title></title>
      <link>/post/klassifikation_produktionsprozesse/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/post/klassifikation_produktionsprozesse/</guid>
      <description>Klassifikation von Produktionsprozessen [TOC]
Generelle Unterscheidung in
 Güterproduktion Dienstleistungsproduktion  Güterproduktion Kriterien für Klassifizierung Outputbezogene Produktionstypen Erzeugnisstruktur Erzeugnisstruktur ist in den Stücklisten dargestellt
 Lineare Struktur Konvergierende Struktur Divergierende Struktur Generelle Struktur  Gestalt der Güter   Ungeformte Fließgüter
  nicht determiniert in Höhe, Breite, Länge
  Geformte Fließgüter
  determiniert in Höhe, Breite
  Stückgüter
 determiniert in Höhe, Breite, Länge    Anzahl der Erzeugnisse  Einprodukt Produktion  ein einziges Produkt als Massenprodukt (Benzin, Diesel)   Mehrprodukt Produktion  mehrere Produktarten    Auflagengröße Massenproduktion: zeitlich nicht begrenzt, große Mengen, Automatisierung</description>
    </item>
    
    <item>
      <title></title>
      <link>/post/warteschlangentheorie/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/post/warteschlangentheorie/</guid>
      <description>Warteschlangentheorie Einführung Die Warteschlangentheorie kann zur Analyse unterschiedlicher Systeme genutzt werden. Dazu gehören beispielsweise: • Fertigungsstraßen in Betrieben • Logistiksysteme • Telekommunikationssysteme und Computer • Verkehrs- und Infrastruktursysteme
Das Ziel der Warteschlangentheorie ist die Ermittlung von Wartezeiten innerhalb des Systems zur Optimierung der gesamten Abläufe. In der Regel sollen damit die Gesamtkosten des Systems minimiert werden, um das Unternehmen effektiver zu machen.
Es werden unter anderem Vorgänge betrachtet, bei denen bestimmte Einheiten oder Transaktionen in unregelmäßigen oder unkontrollierbaren Abständen auf Engpässe treffen.</description>
    </item>
    
  </channel>
</rss>
